---

- hosts: "{{ hosts|default('*') }}"
  remote_user: root
  become: no
  tasks:

  - name: Copy new '/usr/local/bin/ntaxa-haproxy-generate-config-from-workers.sh'
    copy:
      src: "{{ playbook_dir }}/../roles/haproxy-for-workers/templates/scripts/usr/local/bin/ntaxa-haproxy-generate-config-from-workers.sh"
      dest: /usr/local/bin/ntaxa-haproxy-generate-config-from-workers.sh
      owner: root
      group: root
      mode: 0755

  - name: Copy new 'haproxy.frontend.cfg.template'
    copy:
      src: "{{ playbook_dir }}/../roles/haproxy-for-workers/templates/scripts/usr/local/bin/haproxy_templates/haproxy.frontend.cfg.template"
      dest: /usr/local/bin/haproxy_templates/haproxy.frontend.cfg.template
      owner: root
      group: root
      mode: 0755


#  - name: Copy new o-lib.sh
#    copy:
#      src: "{{ playbook_dir }}/../roles/common/templates/scripts/usr/local/bin/o-lib.sh"
#      dest: /usr/local/bin/o-lib.sh
#      owner: root
#      group: root
#      mode: 0755
#
#  - name: Copy cron
#    copy:
#      src: "{{ playbook_dir }}/../roles/haproxy-for-workers/templates/scripts/etc/cron.d/ntaxa-haproxy-generate-config-from-workers"
#      dest: /etc/cron.d
#      owner: root
#      group: root
#      mode: 0644
#
#  - name: restart cron
#    service:
#      name: cron
#      state: restarted
#
#  - name: Set haproxy key to run command '/usr/local/bin/ntaxa-haproxy-generate-config-from-workers.sh'
#    authorized_key:
#      user: root
#      state: present
#      key: "no-port-forwarding,no-X11-forwarding,no-pty,command=\"/usr/local/bin/ntaxa-haproxy-generate-config-from-workers.sh\" {{ lookup('file', playbook_dir + '/../roles/haproxy-for-workers/templates/scripts/root/.ssh/haproxy_worker_communication_id_rsa.pub') }}"
